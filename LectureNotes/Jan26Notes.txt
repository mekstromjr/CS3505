Janaury 26 Lecture Notes

Function operator overloading

C++ toString!!
std::ostream& operator<<(std::ostream& output, const DArray& vals) {
    output << "[";
    for(int i = 0; i < vals.length()-1; i++) {
            output << vals[i] << ", ";
    }

    if(vals.length() > 0) {
        output << vals[vals.length() - 1];
    }
    output << "]";

    return output;
}

= on objects defaults to copying the values from one objects instance variables to the 
    instance variables of the new object. This means pointers are shared between those objects
    Overload equals to fix.

Chaining Requires a return type for the operator


RULE OF THREE
    When a class manages a resource
        - new memory
        - open file
    It needs an explicit
        1) Deconstructor //ie. ~Darray() { delete [] data; ...}
        2) Copy constructor //ie. DArray(const DArray& other) {...}
        3) Assignment Operator (= operator Overload)
            Copy and Swap Idiom
                DArray& operator=(const DArray& other) {
                    swap(data_, other.data_);
                    swap(len_, other.len_);
                    return *this;
                }
            
    